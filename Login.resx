<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAshJREFUaEPt
        mTmoFEEQhtdbUBRRQURR8Ag08UJUDDwTQ8Fb1MjUKxA0MRIxMBVREAwMjARNxMDESIwEMfDCIzDwRvE+
        vm9nGoZhG3dnh30j9A8f011T+2qrtrvndU8rKSkpqQ4tgc0wu937zzQW9sFd+A0f4CdchY0wDBqthXAO
        PsJzOArTQC0C732Cl3ACpkBjNBK2wE34lV/tj4ZOmggH4Al8hSuwEoZMVtOKP4bPYLUXQ7caDhvgGjj8
        HIb7wWE5EDlELoHVtKpW1yr3o7lwCt7Aq7w9E2rXKNgDYfJaRatpVevUePBXuQcuDiFO37IqVscqvc3b
        Vm8QWg3Onx/wAPzlx0HP8g99AefAEZgEneTkngU+K0xU9WMry8KdgXfgatfzMPY58AL+NXxWgUNvKizQ
        gPqxxTQf/kDPD1YTeZo1GyETqJTIXvgGTvAm4AJgIg7FnjQdfE6IE92JF/qBEKRs19fPlO3OA7+M1/K9
        bmIchBFQWY/gNBT/pZgHN3JsB+mjryvdcg25xsA2MBGv9oP00z8W40K7V4Osxnc43+5legg+wKyk7SB9
        9H0GfukZoHaDfYvidRco79vXPxZjfbtXky7mBLkQuCCUF4XgV56cRb/wWVX0i8WoVbEgKZGsmRKprFiQ
        lEjWTIlUVixISiRrpkQqKxYkJZI1UyKVFQuSEsmaKZGetQnuwGswyGFYBwYp4ubnEOijb9hju/tzs1Q8
        A/BqX7v39dM/FuM2hA1aZXlq7tmWu8QVsBbmwNbcJh5ae/7kPX2C3T32BNgBxTMAsb8TvK9fsHeKYaJr
        oC+ZyK2sOWTqKxEPxC7DfQiJHANPHJfCdg1oEDYT8Ts4FGOvK6JykvnCxtcFYcIdh8mwDBwWahC2k2BR
        TSgsHl2ruMo0QeVVsGuZyHvwMK0JnIVKiThGPS1vEteh0quFpKSkpKap1foLrp3E1n5VaRcAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFDSURBVEhLzZZRasMwDIZ9gDrNaVboQ7rtad0JBqUvba9UdqLBdpsx0tJBIftly8auBQ7ENRN8
        JOiX9ddUSaxcDKrZgi/wDYaJUI9PsOH2NpB454J7cHQmmxvhHryREW1REkvyAaP5WRBK09OOJKE4/8bo
        Oii9w/UF9EHeQTloeo8rahPdkzHSBzOaiEHNOuRCM9zPOpah60OgJWSM2ifuYwKNV8iTWWRCQbXx2piM
        kXnCH7iXCWt2a9IsuFbqYcgZEfj17SP3TII0WyOu9YwxIkSzsSbEWKMTHuxn7u+DclYT10SMMfrBRC25
        dxKk2RpxrSdnlOxEHob8znJGa+5lwpqY/wQkk/fKa0QyRnrPfUITp0dmEx9Y/wpaA2m6KFfiFVSOmkb1
        Pny1PuWVDid2NCsct1wg4Q6Qv1wwhQsIDpBK/QExxr45PskuAwAAAABJRU5ErkJggg==
</value>
  </data>
</root>